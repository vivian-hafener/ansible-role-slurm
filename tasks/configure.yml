---
# Prepare Configuration Directories
- name: Copy pam.d/slurm
  when: slurm_with_pam
  ansible.builtin.copy:
    src: pam_slurm
    dest: /etc/pam.d/slurm
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: "{{ slurm_conf_mode }}"

- name: Add log, state, and conf directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: "{{ item.mode }}"
  loop:
    - {path: "{{ slurm_log_dir }}", mode: "{{ slurm_log_mode }}"}
    - {path: "{{ slurm_state_dir }}", mode: "{{ slurm_state_mode }}"}
    - {path: "{{ slurm_conf_dir }}", mode: "{{ slurm_dir_mode }}"}

# Template in Configuration Files
- name: Make configuration files from template
  ansible.builtin.include_tasks: template.yml
  vars:
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: "{{ slurm_conf_mode }}"
  loop:
    - {src: "cgroup.conf.j2", dst: "{{ slurm_conf_dir }}/cgroup.conf", cond: slurm_with_cgroups}
    - {src: "gres.conf.j2", dst: "{{ slurm_conf_dir }}/gres.conf", cond: slurm_with_gpu}
    - {src: "topology.conf.j2", dst: "{{ slurm_conf_dir }}/topology.conf", cond: slurm_with_topo}
    - {src: "slurm.conf.j2", dst: "{{ slurm_conf_dir }}/slurm.conf", cond: configure_slurm or reconfigure_slurm}
    - {src: "slurm_rsyslog.conf", dst: "/etc/rsyslog.d/10_slurm_rsyslog.conf", cond: slurm_with_rsyslog}
    - {src: "slurmd.service.j2", dst: "/etc/systemd/system/slurmd.service", cond: configure_slurm or reconfigure_slurm}
    - {src: "slurmctld.service.j2", dst: "/etc/systemd/system/slurmctld.service", cond: (slurmctld_host == inventory_hostname)}
    - {src: "slurmdbd.service.j2", dst: "/etc/systemd/system/slurmdbd.service", cond: (slurmctld_host == inventory_hostname)}
    - {src: "sackd.service.j2", dst: "/etc/systemd/system/sackd.service", cond: slurm_with_sackd}
    - {src: "cgroup_allowed_devices_file.j2", dst: "{{ slurm_conf_dir }}/cgroup_allowed_devices_file.conf", cond: slurm_with_cgroups}
    - {src: "slurm_logrotate.j2", dst: "/etc/logrotate.d/slurm", cond: (slurm_log_dir is defined) and slurm_with_logrotate}
  register: conf


- name: Template in slurmdbd.conf
  ansible.builtin.template:
    src: slurmdbd.conf.j2
    dest: "{{ slurm_conf_dir }}/slurmdbd.conf"
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: '0600'
    backup: "{{ slurm_backup_conf }}"
  register: slurmdbd_place
  when: slurmdbd_host == inventory_hostname

- name: Configure plugstack
  ansible.builtin.include_tasks: plugstack.yml
  when: slurm_with_plugstack

# REF: https://slurm.schedmd.com/jwt.html#setup
- name: Generate JWT Key
  become: true
  ansible.builtin.command:
    cmd: "dd if=/dev/random of={{ jwt_key_path }} bs=32 count=1"
    creates: "{{ jwt_key_path }}"
  when: slurm_with_jwt

# REF: https://slurm.schedmd.com/jwt.html#setup
- name: Set ownership of JWT key
  become: true
  ansible.builtin.file:
    path: "{{ jwt_key_path }}"
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: '600'
  when: slurm_with_jwt

# REF: https://slurm.schedmd.com/high_throughput.html#sys_config
- name: Increase net.core.somaxconn for slurmctld
  ansible.posix.sysctl:
    name: net.core.somaxconn
    value: "{{ slurm_sysctl_core_somaxconn }}"
    sysctl_file: /etc/sysctl.d/50-slurm.conf
  when: slurm_manage_sysctl

# REF: https://slurm.schedmd.com/high_throughput.html#sys_config
- name: Increase net.ipv4.tcp_max_syn_backlog for slurmctld
  ansible.posix.sysctl:
    name: net.ipv4.tcp_max_syn_backlog
    value: "{{ slurm_sysctl_tcp_max_syn_backlog }}"
    sysctl_file: /etc/sysctl.d/50-slurm.conf
  when: slurm_manage_sysctl

- name: Reload systemd daemon
  become: true
  ansible.builtin.systemd_service:
    daemon_reload: true
