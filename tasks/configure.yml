---
- name: Prepare Directories
  ansible.builtin.include_tasks: directories.yml

# Template in configuration
- name: Make configuration files from template
  ansible.builtin.include_tasks: template.yml
  vars:
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: "{{ slurm_conf_mode }}"
  loop:
    - {src: "cgroup.conf.j2", dst: "{{ slurm_conf_dir }}/cgroup.conf", cond: slurm_with_cgroups}
    - {src: "gres.conf.j2", dst: "{{ slurm_conf_dir }}/gres.conf", cond: slurm_with_gpu}
    - {src: "topology.conf.j2", dst: "{{ slurm_conf_dir }}/topology.conf", cond: slurm_with_topo}
    - {src: "slurm.conf.j2", dst: "{{ slurm_conf_dir }}/slurm.conf", cond: configure_slurm or reconfigure_slurm}
    - {src: "slurm_rsyslog.conf", dst: "/etc/rsyslog.d/10_slurm_rsyslog.conf", cond: slurm_with_rsyslog}
    - {src: "slurmd.service.j2", dst: "/etc/systemd/system/slurmd.service", cond: configure_slurm or reconfigure_slurm}
    - {src: "slurmctld.service.j2", dst: "/etc/systemd/system/slurmctld.service", cond: (slurmctld_host == inventory_hostname)}
    - {src: "slurmdbd.service.j2", dst: "/etc/systemd/system/slurmdbd.service", cond: (slurmctld_host == inventory_hostname)}
    - {src: "sackd.service.j2", dst: "/etc/systemd/system/sackd.service", cond: slurm_with_sackd}


- name: Template in slurmdbd.conf
  ansible.builtin.template:
    src: slurmdbd.conf.j2
    dest: "{{ slurm_conf_dir }}/slurmdbd.conf"
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: '0600'
    backup: "{{ slurm_backup_conf }}"
  register: slurmdbd_place
  when: slurmdbd_host == inventory_hostname

- name: Configure logrotate
  ansible.builtin.template:
    src: slurm_logrotate.j2
    dest: /etc/logrotate.d/slurm
    owner: "{{ slurm_conf_owner }}"
    group: "{{ slurm_conf_group }}"
    mode: "{{ slurm_conf_mode }}"
    backup: false
  when: (slurm_log_dir is defined) and slurm_with_logrotate

- name: Configure plugstack
  ansible.builtin.include_tasks: plugstack.yml
  when: slurm_with_plugstack

- name: Reload systemd daemon
  become: true
  ansible.builtin.systemd_service:
    daemon_reload: true
